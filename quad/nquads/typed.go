// line 1 "typed.rl"
// GO SOURCE FILE MACHINE GENERATED BY RAGEL; DO NOT EDIT

// Copyright 2014 The Cayley Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package nquads

import (
	"fmt"
	"unicode"

	"github.com/cayleygraph/cayley/quad"
)

// line 30 "typed.go"
const typed_start int = 1
const typed_first_final int = 178
const typed_error int = 0

const typed_en_statement int = 1

// line 129 "typed.rl"

// ParseTyped returns a valid quad.Quad or a non-nil error. ParseTyped does
// handle comments except where the comment placement does not prevent
// a complete valid quad.Quad from being defined.
func Parse(statement string) (quad.Quad, error) {
	data := []rune(statement)

	var (
		cs, p int
		pe    = len(data)
		eof   = pe

		subject   = -1
		predicate = -1
		object    = -1
		label     = -1

		spec = -1

		isEscaped bool
		isQuoted  bool

		q quad.Quad
	)

	// line 66 "typed.go"
	{
		cs = typed_start
	}

	// line 156 "typed.rl"

	// line 74 "typed.go"
	{
		if p == pe {
			goto _test_eof
		}
		switch cs {
		case 1:
			goto st_case_1
		case 0:
			goto st_case_0
		case 2:
			goto st_case_2
		case 3:
			goto st_case_3
		case 4:
			goto st_case_4
		case 5:
			goto st_case_5
		case 6:
			goto st_case_6
		case 7:
			goto st_case_7
		case 8:
			goto st_case_8
		case 9:
			goto st_case_9
		case 178:
			goto st_case_178
		case 179:
			goto st_case_179
		case 180:
			goto st_case_180
		case 181:
			goto st_case_181
		case 182:
			goto st_case_182
		case 183:
			goto st_case_183
		case 184:
			goto st_case_184
		case 185:
			goto st_case_185
		case 186:
			goto st_case_186
		case 187:
			goto st_case_187
		case 188:
			goto st_case_188
		case 189:
			goto st_case_189
		case 190:
			goto st_case_190
		case 191:
			goto st_case_191
		case 192:
			goto st_case_192
		case 193:
			goto st_case_193
		case 194:
			goto st_case_194
		case 195:
			goto st_case_195
		case 10:
			goto st_case_10
		case 11:
			goto st_case_11
		case 12:
			goto st_case_12
		case 13:
			goto st_case_13
		case 14:
			goto st_case_14
		case 15:
			goto st_case_15
		case 16:
			goto st_case_16
		case 17:
			goto st_case_17
		case 18:
			goto st_case_18
		case 19:
			goto st_case_19
		case 20:
			goto st_case_20
		case 21:
			goto st_case_21
		case 22:
			goto st_case_22
		case 23:
			goto st_case_23
		case 24:
			goto st_case_24
		case 25:
			goto st_case_25
		case 26:
			goto st_case_26
		case 27:
			goto st_case_27
		case 28:
			goto st_case_28
		case 29:
			goto st_case_29
		case 30:
			goto st_case_30
		case 31:
			goto st_case_31
		case 32:
			goto st_case_32
		case 33:
			goto st_case_33
		case 34:
			goto st_case_34
		case 35:
			goto st_case_35
		case 36:
			goto st_case_36
		case 37:
			goto st_case_37
		case 38:
			goto st_case_38
		case 39:
			goto st_case_39
		case 40:
			goto st_case_40
		case 41:
			goto st_case_41
		case 42:
			goto st_case_42
		case 43:
			goto st_case_43
		case 44:
			goto st_case_44
		case 45:
			goto st_case_45
		case 46:
			goto st_case_46
		case 47:
			goto st_case_47
		case 48:
			goto st_case_48
		case 49:
			goto st_case_49
		case 50:
			goto st_case_50
		case 51:
			goto st_case_51
		case 196:
			goto st_case_196
		case 197:
			goto st_case_197
		case 198:
			goto st_case_198
		case 199:
			goto st_case_199
		case 200:
			goto st_case_200
		case 201:
			goto st_case_201
		case 202:
			goto st_case_202
		case 203:
			goto st_case_203
		case 204:
			goto st_case_204
		case 205:
			goto st_case_205
		case 206:
			goto st_case_206
		case 207:
			goto st_case_207
		case 208:
			goto st_case_208
		case 209:
			goto st_case_209
		case 210:
			goto st_case_210
		case 211:
			goto st_case_211
		case 212:
			goto st_case_212
		case 213:
			goto st_case_213
		case 214:
			goto st_case_214
		case 215:
			goto st_case_215
		case 216:
			goto st_case_216
		case 217:
			goto st_case_217
		case 218:
			goto st_case_218
		case 219:
			goto st_case_219
		case 220:
			goto st_case_220
		case 221:
			goto st_case_221
		case 222:
			goto st_case_222
		case 223:
			goto st_case_223
		case 224:
			goto st_case_224
		case 225:
			goto st_case_225
		case 226:
			goto st_case_226
		case 227:
			goto st_case_227
		case 228:
			goto st_case_228
		case 229:
			goto st_case_229
		case 230:
			goto st_case_230
		case 231:
			goto st_case_231
		case 232:
			goto st_case_232
		case 233:
			goto st_case_233
		case 234:
			goto st_case_234
		case 235:
			goto st_case_235
		case 236:
			goto st_case_236
		case 237:
			goto st_case_237
		case 238:
			goto st_case_238
		case 239:
			goto st_case_239
		case 240:
			goto st_case_240
		case 241:
			goto st_case_241
		case 52:
			goto st_case_52
		case 53:
			goto st_case_53
		case 54:
			goto st_case_54
		case 55:
			goto st_case_55
		case 56:
			goto st_case_56
		case 57:
			goto st_case_57
		case 58:
			goto st_case_58
		case 59:
			goto st_case_59
		case 60:
			goto st_case_60
		case 61:
			goto st_case_61
		case 62:
			goto st_case_62
		case 63:
			goto st_case_63
		case 64:
			goto st_case_64
		case 65:
			goto st_case_65
		case 66:
			goto st_case_66
		case 67:
			goto st_case_67
		case 68:
			goto st_case_68
		case 69:
			goto st_case_69
		case 70:
			goto st_case_70
		case 71:
			goto st_case_71
		case 72:
			goto st_case_72
		case 73:
			goto st_case_73
		case 74:
			goto st_case_74
		case 75:
			goto st_case_75
		case 76:
			goto st_case_76
		case 77:
			goto st_case_77
		case 78:
			goto st_case_78
		case 79:
			goto st_case_79
		case 80:
			goto st_case_80
		case 81:
			goto st_case_81
		case 82:
			goto st_case_82
		case 83:
			goto st_case_83
		case 84:
			goto st_case_84
		case 85:
			goto st_case_85
		case 86:
			goto st_case_86
		case 87:
			goto st_case_87
		case 88:
			goto st_case_88
		case 89:
			goto st_case_89
		case 90:
			goto st_case_90
		case 91:
			goto st_case_91
		case 92:
			goto st_case_92
		case 93:
			goto st_case_93
		case 94:
			goto st_case_94
		case 95:
			goto st_case_95
		case 96:
			goto st_case_96
		case 97:
			goto st_case_97
		case 98:
			goto st_case_98
		case 99:
			goto st_case_99
		case 100:
			goto st_case_100
		case 101:
			goto st_case_101
		case 102:
			goto st_case_102
		case 103:
			goto st_case_103
		case 104:
			goto st_case_104
		case 105:
			goto st_case_105
		case 106:
			goto st_case_106
		case 107:
			goto st_case_107
		case 108:
			goto st_case_108
		case 109:
			goto st_case_109
		case 110:
			goto st_case_110
		case 111:
			goto st_case_111
		case 112:
			goto st_case_112
		case 113:
			goto st_case_113
		case 114:
			goto st_case_114
		case 115:
			goto st_case_115
		case 116:
			goto st_case_116
		case 117:
			goto st_case_117
		case 118:
			goto st_case_118
		case 119:
			goto st_case_119
		case 120:
			goto st_case_120
		case 121:
			goto st_case_121
		case 122:
			goto st_case_122
		case 123:
			goto st_case_123
		case 124:
			goto st_case_124
		case 125:
			goto st_case_125
		case 126:
			goto st_case_126
		case 127:
			goto st_case_127
		case 128:
			goto st_case_128
		case 129:
			goto st_case_129
		case 130:
			goto st_case_130
		case 131:
			goto st_case_131
		case 132:
			goto st_case_132
		case 133:
			goto st_case_133
		case 134:
			goto st_case_134
		case 135:
			goto st_case_135
		case 136:
			goto st_case_136
		case 137:
			goto st_case_137
		case 138:
			goto st_case_138
		case 139:
			goto st_case_139
		case 140:
			goto st_case_140
		case 141:
			goto st_case_141
		case 142:
			goto st_case_142
		case 143:
			goto st_case_143
		case 144:
			goto st_case_144
		case 145:
			goto st_case_145
		case 146:
			goto st_case_146
		case 147:
			goto st_case_147
		case 148:
			goto st_case_148
		case 149:
			goto st_case_149
		case 150:
			goto st_case_150
		case 151:
			goto st_case_151
		case 152:
			goto st_case_152
		case 153:
			goto st_case_153
		case 154:
			goto st_case_154
		case 155:
			goto st_case_155
		case 156:
			goto st_case_156
		case 157:
			goto st_case_157
		case 158:
			goto st_case_158
		case 159:
			goto st_case_159
		case 160:
			goto st_case_160
		case 161:
			goto st_case_161
		case 162:
			goto st_case_162
		case 163:
			goto st_case_163
		case 164:
			goto st_case_164
		case 165:
			goto st_case_165
		case 166:
			goto st_case_166
		case 167:
			goto st_case_167
		case 168:
			goto st_case_168
		case 169:
			goto st_case_169
		case 170:
			goto st_case_170
		case 171:
			goto st_case_171
		case 172:
			goto st_case_172
		case 173:
			goto st_case_173
		case 174:
			goto st_case_174
		case 175:
			goto st_case_175
		case 176:
			goto st_case_176
		case 177:
			goto st_case_177
		}
		goto st_out
	st1:
		if p++; p == pe {
			goto _test_eof1
		}
	st_case_1:
		switch data[p] {
		case 9:
			goto st1
		case 32:
			goto st1
		case 33:
			goto tr2
		case 34:
			goto tr3
		case 46:
			goto tr4
		case 92:
			goto tr5
		case 95:
			goto tr6
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr2
			}
		case data[p] >= 36:
			goto tr2
		}
		goto tr0
	tr0:
		// line 100 "typed.rl"

		if p < len(data) {
			if r := data[p]; r < unicode.MaxASCII {
				return q, fmt.Errorf("%v: unexpected rune %q at %d", quad.ErrInvalid, data[p], p)
			} else {
				return q, fmt.Errorf("%v: unexpected rune %q (\\u%04x) at %d", quad.ErrInvalid, data[p], data[p], p)
			}
		}
		return q, quad.ErrIncomplete

		goto st0
		// line 610 "typed.go"
	st_case_0:
	st0:
		cs = 0
		goto _out
	tr2:
		// line 37 "typed.rl"

		subject = p

		goto st2
	tr203:
		// line 29 "typed.rl"

		isEscaped = true

		goto st2
	st2:
		if p++; p == pe {
			goto _test_eof2
		}
	st_case_2:
		// line 634 "typed.go"
		switch data[p] {
		case 9:
			goto tr7
		case 32:
			goto tr7
		case 33:
			goto st2
		case 46:
			goto st136
		case 92:
			goto st137
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st2
			}
		case data[p] >= 35:
			goto st2
		}
		goto tr0
	tr7:
		// line 57 "typed.rl"

		if subject < 0 {
			panic("unexpected parser state: subject start not set")
		}
		q.Subject = unEscape(data[subject:p], spec-subject, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st3
	tr202:
		// line 29 "typed.rl"

		isEscaped = true

		// line 57 "typed.rl"

		if subject < 0 {
			panic("unexpected parser state: subject start not set")
		}
		q.Subject = unEscape(data[subject:p], spec-subject, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st3
	tr215:
		// line 33 "typed.rl"

		isQuoted = true

		// line 57 "typed.rl"

		if subject < 0 {
			panic("unexpected parser state: subject start not set")
		}
		q.Subject = unEscape(data[subject:p], spec-subject, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st3
	st3:
		if p++; p == pe {
			goto _test_eof3
		}
	st_case_3:
		// line 707 "typed.go"
		switch data[p] {
		case 9:
			goto st3
		case 32:
			goto st3
		case 33:
			goto tr12
		case 34:
			goto tr13
		case 46:
			goto tr14
		case 92:
			goto tr15
		case 95:
			goto tr16
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr12
			}
		case data[p] >= 36:
			goto tr12
		}
		goto tr0
	tr12:
		// line 41 "typed.rl"

		predicate = p

		goto st4
	tr153:
		// line 29 "typed.rl"

		isEscaped = true

		goto st4
	st4:
		if p++; p == pe {
			goto _test_eof4
		}
	st_case_4:
		// line 752 "typed.go"
		switch data[p] {
		case 9:
			goto tr17
		case 32:
			goto tr17
		case 33:
			goto st4
		case 46:
			goto st94
		case 92:
			goto st95
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st4
			}
		case data[p] >= 35:
			goto st4
		}
		goto tr0
	tr17:
		// line 66 "typed.rl"

		if predicate < 0 {
			panic("unexpected parser state: predicate start not set")
		}
		q.Predicate = unEscape(data[predicate:p], spec-predicate, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st5
	tr152:
		// line 29 "typed.rl"

		isEscaped = true

		// line 66 "typed.rl"

		if predicate < 0 {
			panic("unexpected parser state: predicate start not set")
		}
		q.Predicate = unEscape(data[predicate:p], spec-predicate, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st5
	tr165:
		// line 33 "typed.rl"

		isQuoted = true

		// line 66 "typed.rl"

		if predicate < 0 {
			panic("unexpected parser state: predicate start not set")
		}
		q.Predicate = unEscape(data[predicate:p], spec-predicate, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st5
	st5:
		if p++; p == pe {
			goto _test_eof5
		}
	st_case_5:
		// line 825 "typed.go"
		switch data[p] {
		case 9:
			goto st5
		case 32:
			goto st5
		case 33:
			goto tr22
		case 34:
			goto tr23
		case 46:
			goto tr24
		case 92:
			goto tr25
		case 95:
			goto tr26
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr22
			}
		case data[p] >= 36:
			goto tr22
		}
		goto tr0
	tr22:
		// line 45 "typed.rl"

		object = p

		goto st6
	tr101:
		// line 29 "typed.rl"

		isEscaped = true

		goto st6
	st6:
		if p++; p == pe {
			goto _test_eof6
		}
	st_case_6:
		// line 870 "typed.go"
		switch data[p] {
		case 9:
			goto tr27
		case 32:
			goto tr27
		case 33:
			goto st6
		case 46:
			goto tr29
		case 92:
			goto st53
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st6
			}
		case data[p] >= 35:
			goto st6
		}
		goto tr0
	tr27:
		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st7
	tr100:
		// line 29 "typed.rl"

		isEscaped = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st7
	tr113:
		// line 33 "typed.rl"

		isQuoted = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st7
	st7:
		if p++; p == pe {
			goto _test_eof7
		}
	st_case_7:
		// line 943 "typed.go"
		switch data[p] {
		case 9:
			goto st7
		case 32:
			goto st7
		case 33:
			goto tr32
		case 34:
			goto tr33
		case 46:
			goto tr34
		case 92:
			goto tr35
		case 95:
			goto tr36
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr32
			}
		case data[p] >= 36:
			goto tr32
		}
		goto tr0
	tr32:
		// line 49 "typed.rl"

		label = p

		goto st8
	tr48:
		// line 29 "typed.rl"

		isEscaped = true

		goto st8
	st8:
		if p++; p == pe {
			goto _test_eof8
		}
	st_case_8:
		// line 988 "typed.go"
		switch data[p] {
		case 9:
			goto tr37
		case 32:
			goto tr37
		case 33:
			goto st8
		case 46:
			goto tr39
		case 92:
			goto st11
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st8
			}
		case data[p] >= 35:
			goto st8
		}
		goto tr0
	tr37:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st9
	tr47:
		// line 29 "typed.rl"

		isEscaped = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st9
	tr60:
		// line 33 "typed.rl"

		isQuoted = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st9
	st9:
		if p++; p == pe {
			goto _test_eof9
		}
	st_case_9:
		// line 1061 "typed.go"
		switch data[p] {
		case 9:
			goto st9
		case 32:
			goto st9
		case 46:
			goto st178
		}
		goto tr0
	tr119:
		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st178
	tr66:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st178
	tr61:
		// line 33 "typed.rl"

		isQuoted = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st178
	tr114:
		// line 33 "typed.rl"

		isQuoted = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st178
	st178:
		if p++; p == pe {
			goto _test_eof178
		}
	st_case_178:
		// line 1134 "typed.go"
		switch data[p] {
		case 9:
			goto st178
		case 32:
			goto st178
		case 35:
			goto tr250
		}
		goto st0
	tr250:
		// line 97 "typed.rl"

		goto st179
	st179:
		if p++; p == pe {
			goto _test_eof179
		}
	st_case_179:
		// line 1155 "typed.go"
		goto st179
	tr34:
		// line 49 "typed.rl"

		label = p

		goto st180
	tr39:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st180
	tr49:
		// line 29 "typed.rl"

		isEscaped = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st180
	st180:
		if p++; p == pe {
			goto _test_eof180
		}
	st_case_180:
		// line 1198 "typed.go"
		switch data[p] {
		case 9:
			goto st178
		case 32:
			goto st178
		case 33:
			goto st8
		case 35:
			goto tr252
		case 46:
			goto st10
		case 92:
			goto st11
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st8
			}
		case data[p] >= 36:
			goto st8
		}
		goto st0
	tr279:
		// line 49 "typed.rl"

		label = p

		goto st181
	tr264:
		// line 29 "typed.rl"

		isEscaped = true

		goto st181
	tr252:
		// line 97 "typed.rl"

		goto st181
	st181:
		if p++; p == pe {
			goto _test_eof181
		}
	st_case_181:
		// line 1247 "typed.go"
		switch data[p] {
		case 9:
			goto tr253
		case 32:
			goto tr253
		case 33:
			goto st181
		case 46:
			goto tr255
		case 92:
			goto st186
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st181
			}
		case data[p] >= 35:
			goto st181
		}
		goto st179
	tr253:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st182
	tr263:
		// line 29 "typed.rl"

		isEscaped = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st182
	tr287:
		// line 33 "typed.rl"

		isQuoted = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st182
	st182:
		if p++; p == pe {
			goto _test_eof182
		}
	st_case_182:
		// line 1320 "typed.go"
		switch data[p] {
		case 9:
			goto st182
		case 32:
			goto st182
		case 46:
			goto st183
		}
		goto st179
	tr293:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st183
	tr288:
		// line 33 "typed.rl"

		isQuoted = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st183
	st183:
		if p++; p == pe {
			goto _test_eof183
		}
	st_case_183:
		// line 1364 "typed.go"
		switch data[p] {
		case 9:
			goto st183
		case 32:
			goto st183
		case 35:
			goto tr250
		}
		goto st179
	tr281:
		// line 49 "typed.rl"

		label = p

		goto st184
	tr255:
		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st184
	tr265:
		// line 29 "typed.rl"

		isEscaped = true

		// line 84 "typed.rl"

		if label < 0 {
			panic("unexpected parser state: label start not set")
		}
		q.Label = unEscape(data[label:p], spec-label, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st184
	st184:
		if p++; p == pe {
			goto _test_eof184
		}
	st_case_184:
		// line 1415 "typed.go"
		switch data[p] {
		case 9:
			goto st183
		case 32:
			goto st183
		case 33:
			goto st181
		case 35:
			goto tr252
		case 46:
			goto st185
		case 92:
			goto st186
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st181
			}
		case data[p] >= 36:
			goto st181
		}
		goto st179
	st185:
		if p++; p == pe {
			goto _test_eof185
		}
	st_case_185:
		switch data[p] {
		case 33:
			goto st181
		case 46:
			goto st185
		case 92:
			goto st186
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st181
			}
		case data[p] >= 35:
			goto st181
		}
		goto st179
	tr282:
		// line 49 "typed.rl"

		label = p

		goto st186
	tr266:
		// line 29 "typed.rl"

		isEscaped = true

		goto st186
	st186:
		if p++; p == pe {
			goto _test_eof186
		}
	st_case_186:
		// line 1480 "typed.go"
		switch data[p] {
		case 34:
			goto st187
		case 39:
			goto st187
		case 85:
			goto st188
		case 92:
			goto st187
		case 98:
			goto st187
		case 102:
			goto st187
		case 110:
			goto st187
		case 114:
			goto st187
		case 116:
			goto st187
		case 117:
			goto st192
		}
		goto st179
	st187:
		if p++; p == pe {
			goto _test_eof187
		}
	st_case_187:
		switch data[p] {
		case 9:
			goto tr263
		case 32:
			goto tr263
		case 33:
			goto tr264
		case 46:
			goto tr265
		case 92:
			goto tr266
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr264
			}
		case data[p] >= 35:
			goto tr264
		}
		goto st179
	st188:
		if p++; p == pe {
			goto _test_eof188
		}
	st_case_188:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st189
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st189
			}
		default:
			goto st189
		}
		goto st179
	st189:
		if p++; p == pe {
			goto _test_eof189
		}
	st_case_189:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st190
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st190
			}
		default:
			goto st190
		}
		goto st179
	st190:
		if p++; p == pe {
			goto _test_eof190
		}
	st_case_190:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st191
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st191
			}
		default:
			goto st191
		}
		goto st179
	st191:
		if p++; p == pe {
			goto _test_eof191
		}
	st_case_191:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st192
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st192
			}
		default:
			goto st192
		}
		goto st179
	st192:
		if p++; p == pe {
			goto _test_eof192
		}
	st_case_192:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st193
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st193
			}
		default:
			goto st193
		}
		goto st179
	st193:
		if p++; p == pe {
			goto _test_eof193
		}
	st_case_193:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st194
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st194
			}
		default:
			goto st194
		}
		goto st179
	st194:
		if p++; p == pe {
			goto _test_eof194
		}
	st_case_194:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st195
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st195
			}
		default:
			goto st195
		}
		goto st179
	st195:
		if p++; p == pe {
			goto _test_eof195
		}
	st_case_195:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st187
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st187
			}
		default:
			goto st187
		}
		goto st179
	st10:
		if p++; p == pe {
			goto _test_eof10
		}
	st_case_10:
		switch data[p] {
		case 33:
			goto st8
		case 46:
			goto st10
		case 92:
			goto st11
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st8
			}
		case data[p] >= 35:
			goto st8
		}
		goto tr0
	tr35:
		// line 49 "typed.rl"

		label = p

		goto st11
	tr50:
		// line 29 "typed.rl"

		isEscaped = true

		goto st11
	st11:
		if p++; p == pe {
			goto _test_eof11
		}
	st_case_11:
		// line 1715 "typed.go"
		switch data[p] {
		case 34:
			goto st12
		case 39:
			goto st12
		case 85:
			goto st13
		case 92:
			goto st12
		case 98:
			goto st12
		case 102:
			goto st12
		case 110:
			goto st12
		case 114:
			goto st12
		case 116:
			goto st12
		case 117:
			goto st17
		}
		goto tr0
	st12:
		if p++; p == pe {
			goto _test_eof12
		}
	st_case_12:
		switch data[p] {
		case 9:
			goto tr47
		case 32:
			goto tr47
		case 33:
			goto tr48
		case 46:
			goto tr49
		case 92:
			goto tr50
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr48
			}
		case data[p] >= 35:
			goto tr48
		}
		goto tr0
	st13:
		if p++; p == pe {
			goto _test_eof13
		}
	st_case_13:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st14
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st14
			}
		default:
			goto st14
		}
		goto tr0
	st14:
		if p++; p == pe {
			goto _test_eof14
		}
	st_case_14:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st15
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st15
			}
		default:
			goto st15
		}
		goto tr0
	st15:
		if p++; p == pe {
			goto _test_eof15
		}
	st_case_15:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st16
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st16
			}
		default:
			goto st16
		}
		goto tr0
	st16:
		if p++; p == pe {
			goto _test_eof16
		}
	st_case_16:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st17
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st17
			}
		default:
			goto st17
		}
		goto tr0
	st17:
		if p++; p == pe {
			goto _test_eof17
		}
	st_case_17:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st18
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st18
			}
		default:
			goto st18
		}
		goto tr0
	st18:
		if p++; p == pe {
			goto _test_eof18
		}
	st_case_18:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st19
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st19
			}
		default:
			goto st19
		}
		goto tr0
	st19:
		if p++; p == pe {
			goto _test_eof19
		}
	st_case_19:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st20
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st20
			}
		default:
			goto st20
		}
		goto tr0
	st20:
		if p++; p == pe {
			goto _test_eof20
		}
	st_case_20:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st12
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st12
			}
		default:
			goto st12
		}
		goto tr0
	tr33:
		// line 49 "typed.rl"

		label = p

		goto st21
	tr87:
		// line 29 "typed.rl"

		isEscaped = true

		goto st21
	st21:
		if p++; p == pe {
			goto _test_eof21
		}
	st_case_21:
		// line 1928 "typed.go"
		switch data[p] {
		case 34:
			goto st22
		case 92:
			goto st41
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto st21
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto st21
			}
		default:
			goto st21
		}
		goto tr0
	tr88:
		// line 29 "typed.rl"

		isEscaped = true

		goto st22
	st22:
		if p++; p == pe {
			goto _test_eof22
		}
	st_case_22:
		// line 1960 "typed.go"
		switch data[p] {
		case 9:
			goto tr60
		case 32:
			goto tr60
		case 46:
			goto tr61
		case 64:
			goto tr62
		case 94:
			goto tr63
		}
		goto tr0
	tr62:
		// line 53 "typed.rl"

		spec = p

		goto st23
	st23:
		if p++; p == pe {
			goto _test_eof23
		}
	st_case_23:
		// line 1986 "typed.go"
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st24
			}
		case data[p] >= 65:
			goto st24
		}
		goto tr0
	st24:
		if p++; p == pe {
			goto _test_eof24
		}
	st_case_24:
		switch data[p] {
		case 9:
			goto tr37
		case 32:
			goto tr37
		case 45:
			goto st25
		case 46:
			goto tr66
		}
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st24
			}
		case data[p] >= 65:
			goto st24
		}
		goto tr0
	st25:
		if p++; p == pe {
			goto _test_eof25
		}
	st_case_25:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st26
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st26
			}
		default:
			goto st26
		}
		goto tr0
	st26:
		if p++; p == pe {
			goto _test_eof26
		}
	st_case_26:
		switch data[p] {
		case 9:
			goto tr37
		case 32:
			goto tr37
		case 45:
			goto st25
		case 46:
			goto tr66
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st26
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st26
			}
		default:
			goto st26
		}
		goto tr0
	tr63:
		// line 53 "typed.rl"

		spec = p

		goto st27
	st27:
		if p++; p == pe {
			goto _test_eof27
		}
	st_case_27:
		// line 2078 "typed.go"
		if data[p] == 94 {
			goto st28
		}
		goto tr0
	st28:
		if p++; p == pe {
			goto _test_eof28
		}
	st_case_28:
		if data[p] == 60 {
			goto st29
		}
		goto tr0
	tr81:
		// line 29 "typed.rl"

		isEscaped = true

		goto st29
	st29:
		if p++; p == pe {
			goto _test_eof29
		}
	st_case_29:
		// line 2104 "typed.go"
		switch data[p] {
		case 33:
			goto st29
		case 62:
			goto st30
		case 92:
			goto st31
		case 95:
			goto st29
		case 126:
			goto st29
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto st29
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto st29
				}
			case data[p] >= 97:
				goto st29
			}
		default:
			goto st29
		}
		goto tr0
	tr82:
		// line 29 "typed.rl"

		isEscaped = true

		goto st30
	st30:
		if p++; p == pe {
			goto _test_eof30
		}
	st_case_30:
		// line 2147 "typed.go"
		switch data[p] {
		case 9:
			goto tr37
		case 32:
			goto tr37
		case 46:
			goto tr66
		}
		goto tr0
	tr83:
		// line 29 "typed.rl"

		isEscaped = true

		goto st31
	st31:
		if p++; p == pe {
			goto _test_eof31
		}
	st_case_31:
		// line 2169 "typed.go"
		switch data[p] {
		case 85:
			goto st32
		case 117:
			goto st36
		}
		goto tr0
	st32:
		if p++; p == pe {
			goto _test_eof32
		}
	st_case_32:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st33
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st33
			}
		default:
			goto st33
		}
		goto tr0
	st33:
		if p++; p == pe {
			goto _test_eof33
		}
	st_case_33:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st34
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st34
			}
		default:
			goto st34
		}
		goto tr0
	st34:
		if p++; p == pe {
			goto _test_eof34
		}
	st_case_34:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st35
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st35
			}
		default:
			goto st35
		}
		goto tr0
	st35:
		if p++; p == pe {
			goto _test_eof35
		}
	st_case_35:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st36
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st36
			}
		default:
			goto st36
		}
		goto tr0
	st36:
		if p++; p == pe {
			goto _test_eof36
		}
	st_case_36:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st37
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st37
			}
		default:
			goto st37
		}
		goto tr0
	st37:
		if p++; p == pe {
			goto _test_eof37
		}
	st_case_37:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st38
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st38
			}
		default:
			goto st38
		}
		goto tr0
	st38:
		if p++; p == pe {
			goto _test_eof38
		}
	st_case_38:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st39
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st39
			}
		default:
			goto st39
		}
		goto tr0
	st39:
		if p++; p == pe {
			goto _test_eof39
		}
	st_case_39:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st40
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st40
			}
		default:
			goto st40
		}
		goto tr0
	st40:
		if p++; p == pe {
			goto _test_eof40
		}
	st_case_40:
		switch data[p] {
		case 33:
			goto tr81
		case 62:
			goto tr82
		case 92:
			goto tr83
		case 95:
			goto tr81
		case 126:
			goto tr81
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto tr81
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto tr81
				}
			case data[p] >= 97:
				goto tr81
			}
		default:
			goto tr81
		}
		goto tr0
	tr89:
		// line 29 "typed.rl"

		isEscaped = true

		goto st41
	st41:
		if p++; p == pe {
			goto _test_eof41
		}
	st_case_41:
		// line 2368 "typed.go"
		switch data[p] {
		case 34:
			goto st42
		case 39:
			goto st42
		case 85:
			goto st43
		case 92:
			goto st42
		case 98:
			goto st42
		case 102:
			goto st42
		case 110:
			goto st42
		case 114:
			goto st42
		case 116:
			goto st42
		case 117:
			goto st47
		}
		goto tr0
	st42:
		if p++; p == pe {
			goto _test_eof42
		}
	st_case_42:
		switch data[p] {
		case 34:
			goto tr88
		case 92:
			goto tr89
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto tr87
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto tr87
			}
		default:
			goto tr87
		}
		goto tr0
	st43:
		if p++; p == pe {
			goto _test_eof43
		}
	st_case_43:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st44
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st44
			}
		default:
			goto st44
		}
		goto tr0
	st44:
		if p++; p == pe {
			goto _test_eof44
		}
	st_case_44:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st45
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st45
			}
		default:
			goto st45
		}
		goto tr0
	st45:
		if p++; p == pe {
			goto _test_eof45
		}
	st_case_45:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st46
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st46
			}
		default:
			goto st46
		}
		goto tr0
	st46:
		if p++; p == pe {
			goto _test_eof46
		}
	st_case_46:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st47
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st47
			}
		default:
			goto st47
		}
		goto tr0
	st47:
		if p++; p == pe {
			goto _test_eof47
		}
	st_case_47:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st48
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st48
			}
		default:
			goto st48
		}
		goto tr0
	st48:
		if p++; p == pe {
			goto _test_eof48
		}
	st_case_48:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st49
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st49
			}
		default:
			goto st49
		}
		goto tr0
	st49:
		if p++; p == pe {
			goto _test_eof49
		}
	st_case_49:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st50
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st50
			}
		default:
			goto st50
		}
		goto tr0
	st50:
		if p++; p == pe {
			goto _test_eof50
		}
	st_case_50:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st42
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st42
			}
		default:
			goto st42
		}
		goto tr0
	tr36:
		// line 49 "typed.rl"

		label = p

		goto st51
	st51:
		if p++; p == pe {
			goto _test_eof51
		}
	st_case_51:
		// line 2572 "typed.go"
		switch data[p] {
		case 9:
			goto tr37
		case 32:
			goto tr37
		case 33:
			goto st8
		case 46:
			goto tr39
		case 58:
			goto st10
		case 92:
			goto st11
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st8
			}
		case data[p] >= 35:
			goto st8
		}
		goto tr0
	tr29:
		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st196
	tr102:
		// line 29 "typed.rl"

		isEscaped = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st196
	st196:
		if p++; p == pe {
			goto _test_eof196
		}
	st_case_196:
		// line 2630 "typed.go"
		switch data[p] {
		case 9:
			goto st178
		case 32:
			goto st178
		case 33:
			goto st6
		case 35:
			goto tr273
		case 46:
			goto st52
		case 92:
			goto st53
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st6
			}
		case data[p] >= 36:
			goto st6
		}
		goto st0
	tr328:
		// line 29 "typed.rl"

		isEscaped = true

		goto st197
	tr273:
		// line 97 "typed.rl"

		goto st197
	st197:
		if p++; p == pe {
			goto _test_eof197
		}
	st_case_197:
		// line 2672 "typed.go"
		switch data[p] {
		case 9:
			goto tr274
		case 32:
			goto tr274
		case 33:
			goto st197
		case 46:
			goto tr276
		case 92:
			goto st232
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st197
			}
		case data[p] >= 35:
			goto st197
		}
		goto st179
	tr274:
		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st198
	tr327:
		// line 29 "typed.rl"

		isEscaped = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st198
	st198:
		if p++; p == pe {
			goto _test_eof198
		}
	st_case_198:
		// line 2728 "typed.go"
		switch data[p] {
		case 9:
			goto st198
		case 32:
			goto st198
		case 33:
			goto tr279
		case 34:
			goto tr280
		case 46:
			goto tr281
		case 92:
			goto tr282
		case 95:
			goto tr283
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr279
			}
		case data[p] >= 36:
			goto tr279
		}
		goto st179
	tr280:
		// line 49 "typed.rl"

		label = p

		goto st199
	tr314:
		// line 29 "typed.rl"

		isEscaped = true

		goto st199
	st199:
		if p++; p == pe {
			goto _test_eof199
		}
	st_case_199:
		// line 2773 "typed.go"
		switch data[p] {
		case 34:
			goto st200
		case 92:
			goto st219
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto st199
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto st199
			}
		default:
			goto st199
		}
		goto st179
	tr315:
		// line 29 "typed.rl"

		isEscaped = true

		goto st200
	st200:
		if p++; p == pe {
			goto _test_eof200
		}
	st_case_200:
		// line 2805 "typed.go"
		switch data[p] {
		case 9:
			goto tr287
		case 32:
			goto tr287
		case 46:
			goto tr288
		case 64:
			goto tr289
		case 94:
			goto tr290
		}
		goto st179
	tr289:
		// line 53 "typed.rl"

		spec = p

		goto st201
	st201:
		if p++; p == pe {
			goto _test_eof201
		}
	st_case_201:
		// line 2831 "typed.go"
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st202
			}
		case data[p] >= 65:
			goto st202
		}
		goto st179
	st202:
		if p++; p == pe {
			goto _test_eof202
		}
	st_case_202:
		switch data[p] {
		case 9:
			goto tr253
		case 32:
			goto tr253
		case 45:
			goto st203
		case 46:
			goto tr293
		}
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st202
			}
		case data[p] >= 65:
			goto st202
		}
		goto st179
	st203:
		if p++; p == pe {
			goto _test_eof203
		}
	st_case_203:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st204
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st204
			}
		default:
			goto st204
		}
		goto st179
	st204:
		if p++; p == pe {
			goto _test_eof204
		}
	st_case_204:
		switch data[p] {
		case 9:
			goto tr253
		case 32:
			goto tr253
		case 45:
			goto st203
		case 46:
			goto tr293
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st204
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st204
			}
		default:
			goto st204
		}
		goto st179
	tr290:
		// line 53 "typed.rl"

		spec = p

		goto st205
	st205:
		if p++; p == pe {
			goto _test_eof205
		}
	st_case_205:
		// line 2923 "typed.go"
		if data[p] == 94 {
			goto st206
		}
		goto st179
	st206:
		if p++; p == pe {
			goto _test_eof206
		}
	st_case_206:
		if data[p] == 60 {
			goto st207
		}
		goto st179
	tr308:
		// line 29 "typed.rl"

		isEscaped = true

		goto st207
	st207:
		if p++; p == pe {
			goto _test_eof207
		}
	st_case_207:
		// line 2949 "typed.go"
		switch data[p] {
		case 33:
			goto st207
		case 62:
			goto st208
		case 92:
			goto st209
		case 95:
			goto st207
		case 126:
			goto st207
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto st207
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto st207
				}
			case data[p] >= 97:
				goto st207
			}
		default:
			goto st207
		}
		goto st179
	tr309:
		// line 29 "typed.rl"

		isEscaped = true

		goto st208
	st208:
		if p++; p == pe {
			goto _test_eof208
		}
	st_case_208:
		// line 2992 "typed.go"
		switch data[p] {
		case 9:
			goto tr253
		case 32:
			goto tr253
		case 46:
			goto tr293
		}
		goto st179
	tr310:
		// line 29 "typed.rl"

		isEscaped = true

		goto st209
	st209:
		if p++; p == pe {
			goto _test_eof209
		}
	st_case_209:
		// line 3014 "typed.go"
		switch data[p] {
		case 85:
			goto st210
		case 117:
			goto st214
		}
		goto st179
	st210:
		if p++; p == pe {
			goto _test_eof210
		}
	st_case_210:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st211
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st211
			}
		default:
			goto st211
		}
		goto st179
	st211:
		if p++; p == pe {
			goto _test_eof211
		}
	st_case_211:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st212
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st212
			}
		default:
			goto st212
		}
		goto st179
	st212:
		if p++; p == pe {
			goto _test_eof212
		}
	st_case_212:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st213
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st213
			}
		default:
			goto st213
		}
		goto st179
	st213:
		if p++; p == pe {
			goto _test_eof213
		}
	st_case_213:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st214
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st214
			}
		default:
			goto st214
		}
		goto st179
	st214:
		if p++; p == pe {
			goto _test_eof214
		}
	st_case_214:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st215
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st215
			}
		default:
			goto st215
		}
		goto st179
	st215:
		if p++; p == pe {
			goto _test_eof215
		}
	st_case_215:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st216
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st216
			}
		default:
			goto st216
		}
		goto st179
	st216:
		if p++; p == pe {
			goto _test_eof216
		}
	st_case_216:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st217
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st217
			}
		default:
			goto st217
		}
		goto st179
	st217:
		if p++; p == pe {
			goto _test_eof217
		}
	st_case_217:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st218
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st218
			}
		default:
			goto st218
		}
		goto st179
	st218:
		if p++; p == pe {
			goto _test_eof218
		}
	st_case_218:
		switch data[p] {
		case 33:
			goto tr308
		case 62:
			goto tr309
		case 92:
			goto tr310
		case 95:
			goto tr308
		case 126:
			goto tr308
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto tr308
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto tr308
				}
			case data[p] >= 97:
				goto tr308
			}
		default:
			goto tr308
		}
		goto st179
	tr316:
		// line 29 "typed.rl"

		isEscaped = true

		goto st219
	st219:
		if p++; p == pe {
			goto _test_eof219
		}
	st_case_219:
		// line 3213 "typed.go"
		switch data[p] {
		case 34:
			goto st220
		case 39:
			goto st220
		case 85:
			goto st221
		case 92:
			goto st220
		case 98:
			goto st220
		case 102:
			goto st220
		case 110:
			goto st220
		case 114:
			goto st220
		case 116:
			goto st220
		case 117:
			goto st225
		}
		goto st179
	st220:
		if p++; p == pe {
			goto _test_eof220
		}
	st_case_220:
		switch data[p] {
		case 34:
			goto tr315
		case 92:
			goto tr316
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto tr314
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto tr314
			}
		default:
			goto tr314
		}
		goto st179
	st221:
		if p++; p == pe {
			goto _test_eof221
		}
	st_case_221:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st222
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st222
			}
		default:
			goto st222
		}
		goto st179
	st222:
		if p++; p == pe {
			goto _test_eof222
		}
	st_case_222:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st223
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st223
			}
		default:
			goto st223
		}
		goto st179
	st223:
		if p++; p == pe {
			goto _test_eof223
		}
	st_case_223:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st224
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st224
			}
		default:
			goto st224
		}
		goto st179
	st224:
		if p++; p == pe {
			goto _test_eof224
		}
	st_case_224:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st225
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st225
			}
		default:
			goto st225
		}
		goto st179
	st225:
		if p++; p == pe {
			goto _test_eof225
		}
	st_case_225:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st226
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st226
			}
		default:
			goto st226
		}
		goto st179
	st226:
		if p++; p == pe {
			goto _test_eof226
		}
	st_case_226:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st227
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st227
			}
		default:
			goto st227
		}
		goto st179
	st227:
		if p++; p == pe {
			goto _test_eof227
		}
	st_case_227:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st228
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st228
			}
		default:
			goto st228
		}
		goto st179
	st228:
		if p++; p == pe {
			goto _test_eof228
		}
	st_case_228:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st220
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st220
			}
		default:
			goto st220
		}
		goto st179
	tr283:
		// line 49 "typed.rl"

		label = p

		goto st229
	st229:
		if p++; p == pe {
			goto _test_eof229
		}
	st_case_229:
		// line 3417 "typed.go"
		switch data[p] {
		case 9:
			goto tr253
		case 32:
			goto tr253
		case 33:
			goto st181
		case 46:
			goto tr255
		case 58:
			goto st185
		case 92:
			goto st186
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st181
			}
		case data[p] >= 35:
			goto st181
		}
		goto st179
	tr276:
		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st230
	tr329:
		// line 29 "typed.rl"

		isEscaped = true

		// line 75 "typed.rl"

		if object < 0 {
			panic("unexpected parser state: object start not set")
		}
		q.Object = unEscape(data[object:p], spec-object, isQuoted, isEscaped)
		isEscaped = false
		isQuoted = false

		goto st230
	st230:
		if p++; p == pe {
			goto _test_eof230
		}
	st_case_230:
		// line 3475 "typed.go"
		switch data[p] {
		case 9:
			goto st183
		case 32:
			goto st183
		case 33:
			goto st197
		case 35:
			goto tr273
		case 46:
			goto st231
		case 92:
			goto st232
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st197
			}
		case data[p] >= 36:
			goto st197
		}
		goto st179
	st231:
		if p++; p == pe {
			goto _test_eof231
		}
	st_case_231:
		switch data[p] {
		case 33:
			goto st197
		case 46:
			goto st231
		case 92:
			goto st232
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st197
			}
		case data[p] >= 35:
			goto st197
		}
		goto st179
	tr330:
		// line 29 "typed.rl"

		isEscaped = true

		goto st232
	st232:
		if p++; p == pe {
			goto _test_eof232
		}
	st_case_232:
		// line 3533 "typed.go"
		switch data[p] {
		case 34:
			goto st233
		case 39:
			goto st233
		case 85:
			goto st234
		case 92:
			goto st233
		case 98:
			goto st233
		case 102:
			goto st233
		case 110:
			goto st233
		case 114:
			goto st233
		case 116:
			goto st233
		case 117:
			goto st238
		}
		goto st179
	st233:
		if p++; p == pe {
			goto _test_eof233
		}
	st_case_233:
		switch data[p] {
		case 9:
			goto tr327
		case 32:
			goto tr327
		case 33:
			goto tr328
		case 46:
			goto tr329
		case 92:
			goto tr330
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr328
			}
		case data[p] >= 35:
			goto tr328
		}
		goto st179
	st234:
		if p++; p == pe {
			goto _test_eof234
		}
	st_case_234:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st235
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st235
			}
		default:
			goto st235
		}
		goto st179
	st235:
		if p++; p == pe {
			goto _test_eof235
		}
	st_case_235:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st236
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st236
			}
		default:
			goto st236
		}
		goto st179
	st236:
		if p++; p == pe {
			goto _test_eof236
		}
	st_case_236:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st237
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st237
			}
		default:
			goto st237
		}
		goto st179
	st237:
		if p++; p == pe {
			goto _test_eof237
		}
	st_case_237:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st238
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st238
			}
		default:
			goto st238
		}
		goto st179
	st238:
		if p++; p == pe {
			goto _test_eof238
		}
	st_case_238:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st239
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st239
			}
		default:
			goto st239
		}
		goto st179
	st239:
		if p++; p == pe {
			goto _test_eof239
		}
	st_case_239:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st240
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st240
			}
		default:
			goto st240
		}
		goto st179
	st240:
		if p++; p == pe {
			goto _test_eof240
		}
	st_case_240:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st241
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st241
			}
		default:
			goto st241
		}
		goto st179
	st241:
		if p++; p == pe {
			goto _test_eof241
		}
	st_case_241:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st233
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st233
			}
		default:
			goto st233
		}
		goto st179
	tr24:
		// line 45 "typed.rl"

		object = p

		goto st52
	st52:
		if p++; p == pe {
			goto _test_eof52
		}
	st_case_52:
		// line 3739 "typed.go"
		switch data[p] {
		case 33:
			goto st6
		case 46:
			goto st52
		case 92:
			goto st53
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st6
			}
		case data[p] >= 35:
			goto st6
		}
		goto tr0
	tr25:
		// line 45 "typed.rl"

		object = p

		goto st53
	tr103:
		// line 29 "typed.rl"

		isEscaped = true

		goto st53
	st53:
		if p++; p == pe {
			goto _test_eof53
		}
	st_case_53:
		// line 3776 "typed.go"
		switch data[p] {
		case 34:
			goto st54
		case 39:
			goto st54
		case 85:
			goto st55
		case 92:
			goto st54
		case 98:
			goto st54
		case 102:
			goto st54
		case 110:
			goto st54
		case 114:
			goto st54
		case 116:
			goto st54
		case 117:
			goto st59
		}
		goto tr0
	st54:
		if p++; p == pe {
			goto _test_eof54
		}
	st_case_54:
		switch data[p] {
		case 9:
			goto tr100
		case 32:
			goto tr100
		case 33:
			goto tr101
		case 46:
			goto tr102
		case 92:
			goto tr103
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr101
			}
		case data[p] >= 35:
			goto tr101
		}
		goto tr0
	st55:
		if p++; p == pe {
			goto _test_eof55
		}
	st_case_55:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st56
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st56
			}
		default:
			goto st56
		}
		goto tr0
	st56:
		if p++; p == pe {
			goto _test_eof56
		}
	st_case_56:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st57
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st57
			}
		default:
			goto st57
		}
		goto tr0
	st57:
		if p++; p == pe {
			goto _test_eof57
		}
	st_case_57:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st58
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st58
			}
		default:
			goto st58
		}
		goto tr0
	st58:
		if p++; p == pe {
			goto _test_eof58
		}
	st_case_58:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st59
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st59
			}
		default:
			goto st59
		}
		goto tr0
	st59:
		if p++; p == pe {
			goto _test_eof59
		}
	st_case_59:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st60
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st60
			}
		default:
			goto st60
		}
		goto tr0
	st60:
		if p++; p == pe {
			goto _test_eof60
		}
	st_case_60:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st61
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st61
			}
		default:
			goto st61
		}
		goto tr0
	st61:
		if p++; p == pe {
			goto _test_eof61
		}
	st_case_61:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st62
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st62
			}
		default:
			goto st62
		}
		goto tr0
	st62:
		if p++; p == pe {
			goto _test_eof62
		}
	st_case_62:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st54
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st54
			}
		default:
			goto st54
		}
		goto tr0
	tr23:
		// line 45 "typed.rl"

		object = p

		goto st63
	tr140:
		// line 29 "typed.rl"

		isEscaped = true

		goto st63
	st63:
		if p++; p == pe {
			goto _test_eof63
		}
	st_case_63:
		// line 3989 "typed.go"
		switch data[p] {
		case 34:
			goto st64
		case 92:
			goto st83
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto st63
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto st63
			}
		default:
			goto st63
		}
		goto tr0
	tr141:
		// line 29 "typed.rl"

		isEscaped = true

		goto st64
	st64:
		if p++; p == pe {
			goto _test_eof64
		}
	st_case_64:
		// line 4021 "typed.go"
		switch data[p] {
		case 9:
			goto tr113
		case 32:
			goto tr113
		case 46:
			goto tr114
		case 64:
			goto tr115
		case 94:
			goto tr116
		}
		goto tr0
	tr115:
		// line 53 "typed.rl"

		spec = p

		goto st65
	st65:
		if p++; p == pe {
			goto _test_eof65
		}
	st_case_65:
		// line 4047 "typed.go"
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st66
			}
		case data[p] >= 65:
			goto st66
		}
		goto tr0
	st66:
		if p++; p == pe {
			goto _test_eof66
		}
	st_case_66:
		switch data[p] {
		case 9:
			goto tr27
		case 32:
			goto tr27
		case 45:
			goto st67
		case 46:
			goto tr119
		}
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st66
			}
		case data[p] >= 65:
			goto st66
		}
		goto tr0
	st67:
		if p++; p == pe {
			goto _test_eof67
		}
	st_case_67:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st68
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st68
			}
		default:
			goto st68
		}
		goto tr0
	st68:
		if p++; p == pe {
			goto _test_eof68
		}
	st_case_68:
		switch data[p] {
		case 9:
			goto tr27
		case 32:
			goto tr27
		case 45:
			goto st67
		case 46:
			goto tr119
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st68
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st68
			}
		default:
			goto st68
		}
		goto tr0
	tr116:
		// line 53 "typed.rl"

		spec = p

		goto st69
	st69:
		if p++; p == pe {
			goto _test_eof69
		}
	st_case_69:
		// line 4139 "typed.go"
		if data[p] == 94 {
			goto st70
		}
		goto tr0
	st70:
		if p++; p == pe {
			goto _test_eof70
		}
	st_case_70:
		if data[p] == 60 {
			goto st71
		}
		goto tr0
	tr134:
		// line 29 "typed.rl"

		isEscaped = true

		goto st71
	st71:
		if p++; p == pe {
			goto _test_eof71
		}
	st_case_71:
		// line 4165 "typed.go"
		switch data[p] {
		case 33:
			goto st71
		case 62:
			goto st72
		case 92:
			goto st73
		case 95:
			goto st71
		case 126:
			goto st71
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto st71
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto st71
				}
			case data[p] >= 97:
				goto st71
			}
		default:
			goto st71
		}
		goto tr0
	tr135:
		// line 29 "typed.rl"

		isEscaped = true

		goto st72
	st72:
		if p++; p == pe {
			goto _test_eof72
		}
	st_case_72:
		// line 4208 "typed.go"
		switch data[p] {
		case 9:
			goto tr27
		case 32:
			goto tr27
		case 46:
			goto tr119
		}
		goto tr0
	tr136:
		// line 29 "typed.rl"

		isEscaped = true

		goto st73
	st73:
		if p++; p == pe {
			goto _test_eof73
		}
	st_case_73:
		// line 4230 "typed.go"
		switch data[p] {
		case 85:
			goto st74
		case 117:
			goto st78
		}
		goto tr0
	st74:
		if p++; p == pe {
			goto _test_eof74
		}
	st_case_74:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st75
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st75
			}
		default:
			goto st75
		}
		goto tr0
	st75:
		if p++; p == pe {
			goto _test_eof75
		}
	st_case_75:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st76
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st76
			}
		default:
			goto st76
		}
		goto tr0
	st76:
		if p++; p == pe {
			goto _test_eof76
		}
	st_case_76:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st77
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st77
			}
		default:
			goto st77
		}
		goto tr0
	st77:
		if p++; p == pe {
			goto _test_eof77
		}
	st_case_77:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st78
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st78
			}
		default:
			goto st78
		}
		goto tr0
	st78:
		if p++; p == pe {
			goto _test_eof78
		}
	st_case_78:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st79
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st79
			}
		default:
			goto st79
		}
		goto tr0
	st79:
		if p++; p == pe {
			goto _test_eof79
		}
	st_case_79:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st80
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st80
			}
		default:
			goto st80
		}
		goto tr0
	st80:
		if p++; p == pe {
			goto _test_eof80
		}
	st_case_80:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st81
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st81
			}
		default:
			goto st81
		}
		goto tr0
	st81:
		if p++; p == pe {
			goto _test_eof81
		}
	st_case_81:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st82
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st82
			}
		default:
			goto st82
		}
		goto tr0
	st82:
		if p++; p == pe {
			goto _test_eof82
		}
	st_case_82:
		switch data[p] {
		case 33:
			goto tr134
		case 62:
			goto tr135
		case 92:
			goto tr136
		case 95:
			goto tr134
		case 126:
			goto tr134
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto tr134
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto tr134
				}
			case data[p] >= 97:
				goto tr134
			}
		default:
			goto tr134
		}
		goto tr0
	tr142:
		// line 29 "typed.rl"

		isEscaped = true

		goto st83
	st83:
		if p++; p == pe {
			goto _test_eof83
		}
	st_case_83:
		// line 4429 "typed.go"
		switch data[p] {
		case 34:
			goto st84
		case 39:
			goto st84
		case 85:
			goto st85
		case 92:
			goto st84
		case 98:
			goto st84
		case 102:
			goto st84
		case 110:
			goto st84
		case 114:
			goto st84
		case 116:
			goto st84
		case 117:
			goto st89
		}
		goto tr0
	st84:
		if p++; p == pe {
			goto _test_eof84
		}
	st_case_84:
		switch data[p] {
		case 34:
			goto tr141
		case 92:
			goto tr142
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto tr140
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto tr140
			}
		default:
			goto tr140
		}
		goto tr0
	st85:
		if p++; p == pe {
			goto _test_eof85
		}
	st_case_85:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st86
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st86
			}
		default:
			goto st86
		}
		goto tr0
	st86:
		if p++; p == pe {
			goto _test_eof86
		}
	st_case_86:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st87
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st87
			}
		default:
			goto st87
		}
		goto tr0
	st87:
		if p++; p == pe {
			goto _test_eof87
		}
	st_case_87:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st88
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st88
			}
		default:
			goto st88
		}
		goto tr0
	st88:
		if p++; p == pe {
			goto _test_eof88
		}
	st_case_88:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st89
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st89
			}
		default:
			goto st89
		}
		goto tr0
	st89:
		if p++; p == pe {
			goto _test_eof89
		}
	st_case_89:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st90
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st90
			}
		default:
			goto st90
		}
		goto tr0
	st90:
		if p++; p == pe {
			goto _test_eof90
		}
	st_case_90:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st91
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st91
			}
		default:
			goto st91
		}
		goto tr0
	st91:
		if p++; p == pe {
			goto _test_eof91
		}
	st_case_91:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st92
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st92
			}
		default:
			goto st92
		}
		goto tr0
	st92:
		if p++; p == pe {
			goto _test_eof92
		}
	st_case_92:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st84
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st84
			}
		default:
			goto st84
		}
		goto tr0
	tr26:
		// line 45 "typed.rl"

		object = p

		goto st93
	st93:
		if p++; p == pe {
			goto _test_eof93
		}
	st_case_93:
		// line 4633 "typed.go"
		switch data[p] {
		case 9:
			goto tr27
		case 32:
			goto tr27
		case 33:
			goto st6
		case 46:
			goto tr29
		case 58:
			goto st52
		case 92:
			goto st53
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st6
			}
		case data[p] >= 35:
			goto st6
		}
		goto tr0
	tr14:
		// line 41 "typed.rl"

		predicate = p

		goto st94
	tr154:
		// line 29 "typed.rl"

		isEscaped = true

		goto st94
	st94:
		if p++; p == pe {
			goto _test_eof94
		}
	st_case_94:
		// line 4676 "typed.go"
		switch data[p] {
		case 33:
			goto st4
		case 46:
			goto st94
		case 92:
			goto st95
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st4
			}
		case data[p] >= 35:
			goto st4
		}
		goto tr0
	tr15:
		// line 41 "typed.rl"

		predicate = p

		goto st95
	tr155:
		// line 29 "typed.rl"

		isEscaped = true

		goto st95
	st95:
		if p++; p == pe {
			goto _test_eof95
		}
	st_case_95:
		// line 4713 "typed.go"
		switch data[p] {
		case 34:
			goto st96
		case 39:
			goto st96
		case 85:
			goto st97
		case 92:
			goto st96
		case 98:
			goto st96
		case 102:
			goto st96
		case 110:
			goto st96
		case 114:
			goto st96
		case 116:
			goto st96
		case 117:
			goto st101
		}
		goto tr0
	st96:
		if p++; p == pe {
			goto _test_eof96
		}
	st_case_96:
		switch data[p] {
		case 9:
			goto tr152
		case 32:
			goto tr152
		case 33:
			goto tr153
		case 46:
			goto tr154
		case 92:
			goto tr155
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr153
			}
		case data[p] >= 35:
			goto tr153
		}
		goto tr0
	st97:
		if p++; p == pe {
			goto _test_eof97
		}
	st_case_97:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st98
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st98
			}
		default:
			goto st98
		}
		goto tr0
	st98:
		if p++; p == pe {
			goto _test_eof98
		}
	st_case_98:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st99
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st99
			}
		default:
			goto st99
		}
		goto tr0
	st99:
		if p++; p == pe {
			goto _test_eof99
		}
	st_case_99:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st100
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st100
			}
		default:
			goto st100
		}
		goto tr0
	st100:
		if p++; p == pe {
			goto _test_eof100
		}
	st_case_100:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st101
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st101
			}
		default:
			goto st101
		}
		goto tr0
	st101:
		if p++; p == pe {
			goto _test_eof101
		}
	st_case_101:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st102
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st102
			}
		default:
			goto st102
		}
		goto tr0
	st102:
		if p++; p == pe {
			goto _test_eof102
		}
	st_case_102:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st103
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st103
			}
		default:
			goto st103
		}
		goto tr0
	st103:
		if p++; p == pe {
			goto _test_eof103
		}
	st_case_103:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st104
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st104
			}
		default:
			goto st104
		}
		goto tr0
	st104:
		if p++; p == pe {
			goto _test_eof104
		}
	st_case_104:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st96
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st96
			}
		default:
			goto st96
		}
		goto tr0
	tr13:
		// line 41 "typed.rl"

		predicate = p

		goto st105
	tr190:
		// line 29 "typed.rl"

		isEscaped = true

		goto st105
	st105:
		if p++; p == pe {
			goto _test_eof105
		}
	st_case_105:
		// line 4926 "typed.go"
		switch data[p] {
		case 34:
			goto st106
		case 92:
			goto st125
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto st105
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto st105
			}
		default:
			goto st105
		}
		goto tr0
	tr191:
		// line 29 "typed.rl"

		isEscaped = true

		goto st106
	st106:
		if p++; p == pe {
			goto _test_eof106
		}
	st_case_106:
		// line 4958 "typed.go"
		switch data[p] {
		case 9:
			goto tr165
		case 32:
			goto tr165
		case 64:
			goto tr166
		case 94:
			goto tr167
		}
		goto tr0
	tr166:
		// line 53 "typed.rl"

		spec = p

		goto st107
	st107:
		if p++; p == pe {
			goto _test_eof107
		}
	st_case_107:
		// line 4982 "typed.go"
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st108
			}
		case data[p] >= 65:
			goto st108
		}
		goto tr0
	st108:
		if p++; p == pe {
			goto _test_eof108
		}
	st_case_108:
		switch data[p] {
		case 9:
			goto tr17
		case 32:
			goto tr17
		case 45:
			goto st109
		}
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st108
			}
		case data[p] >= 65:
			goto st108
		}
		goto tr0
	st109:
		if p++; p == pe {
			goto _test_eof109
		}
	st_case_109:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st110
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st110
			}
		default:
			goto st110
		}
		goto tr0
	st110:
		if p++; p == pe {
			goto _test_eof110
		}
	st_case_110:
		switch data[p] {
		case 9:
			goto tr17
		case 32:
			goto tr17
		case 45:
			goto st109
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st110
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st110
			}
		default:
			goto st110
		}
		goto tr0
	tr167:
		// line 53 "typed.rl"

		spec = p

		goto st111
	st111:
		if p++; p == pe {
			goto _test_eof111
		}
	st_case_111:
		// line 5070 "typed.go"
		if data[p] == 94 {
			goto st112
		}
		goto tr0
	st112:
		if p++; p == pe {
			goto _test_eof112
		}
	st_case_112:
		if data[p] == 60 {
			goto st113
		}
		goto tr0
	tr184:
		// line 29 "typed.rl"

		isEscaped = true

		goto st113
	st113:
		if p++; p == pe {
			goto _test_eof113
		}
	st_case_113:
		// line 5096 "typed.go"
		switch data[p] {
		case 33:
			goto st113
		case 62:
			goto st114
		case 92:
			goto st115
		case 95:
			goto st113
		case 126:
			goto st113
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto st113
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto st113
				}
			case data[p] >= 97:
				goto st113
			}
		default:
			goto st113
		}
		goto tr0
	tr185:
		// line 29 "typed.rl"

		isEscaped = true

		goto st114
	st114:
		if p++; p == pe {
			goto _test_eof114
		}
	st_case_114:
		// line 5139 "typed.go"
		switch data[p] {
		case 9:
			goto tr17
		case 32:
			goto tr17
		}
		goto tr0
	tr186:
		// line 29 "typed.rl"

		isEscaped = true

		goto st115
	st115:
		if p++; p == pe {
			goto _test_eof115
		}
	st_case_115:
		// line 5159 "typed.go"
		switch data[p] {
		case 85:
			goto st116
		case 117:
			goto st120
		}
		goto tr0
	st116:
		if p++; p == pe {
			goto _test_eof116
		}
	st_case_116:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st117
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st117
			}
		default:
			goto st117
		}
		goto tr0
	st117:
		if p++; p == pe {
			goto _test_eof117
		}
	st_case_117:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st118
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st118
			}
		default:
			goto st118
		}
		goto tr0
	st118:
		if p++; p == pe {
			goto _test_eof118
		}
	st_case_118:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st119
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st119
			}
		default:
			goto st119
		}
		goto tr0
	st119:
		if p++; p == pe {
			goto _test_eof119
		}
	st_case_119:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st120
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st120
			}
		default:
			goto st120
		}
		goto tr0
	st120:
		if p++; p == pe {
			goto _test_eof120
		}
	st_case_120:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st121
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st121
			}
		default:
			goto st121
		}
		goto tr0
	st121:
		if p++; p == pe {
			goto _test_eof121
		}
	st_case_121:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st122
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st122
			}
		default:
			goto st122
		}
		goto tr0
	st122:
		if p++; p == pe {
			goto _test_eof122
		}
	st_case_122:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st123
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st123
			}
		default:
			goto st123
		}
		goto tr0
	st123:
		if p++; p == pe {
			goto _test_eof123
		}
	st_case_123:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st124
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st124
			}
		default:
			goto st124
		}
		goto tr0
	st124:
		if p++; p == pe {
			goto _test_eof124
		}
	st_case_124:
		switch data[p] {
		case 33:
			goto tr184
		case 62:
			goto tr185
		case 92:
			goto tr186
		case 95:
			goto tr184
		case 126:
			goto tr184
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto tr184
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto tr184
				}
			case data[p] >= 97:
				goto tr184
			}
		default:
			goto tr184
		}
		goto tr0
	tr192:
		// line 29 "typed.rl"

		isEscaped = true

		goto st125
	st125:
		if p++; p == pe {
			goto _test_eof125
		}
	st_case_125:
		// line 5358 "typed.go"
		switch data[p] {
		case 34:
			goto st126
		case 39:
			goto st126
		case 85:
			goto st127
		case 92:
			goto st126
		case 98:
			goto st126
		case 102:
			goto st126
		case 110:
			goto st126
		case 114:
			goto st126
		case 116:
			goto st126
		case 117:
			goto st131
		}
		goto tr0
	st126:
		if p++; p == pe {
			goto _test_eof126
		}
	st_case_126:
		switch data[p] {
		case 34:
			goto tr191
		case 92:
			goto tr192
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto tr190
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto tr190
			}
		default:
			goto tr190
		}
		goto tr0
	st127:
		if p++; p == pe {
			goto _test_eof127
		}
	st_case_127:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st128
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st128
			}
		default:
			goto st128
		}
		goto tr0
	st128:
		if p++; p == pe {
			goto _test_eof128
		}
	st_case_128:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st129
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st129
			}
		default:
			goto st129
		}
		goto tr0
	st129:
		if p++; p == pe {
			goto _test_eof129
		}
	st_case_129:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st130
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st130
			}
		default:
			goto st130
		}
		goto tr0
	st130:
		if p++; p == pe {
			goto _test_eof130
		}
	st_case_130:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st131
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st131
			}
		default:
			goto st131
		}
		goto tr0
	st131:
		if p++; p == pe {
			goto _test_eof131
		}
	st_case_131:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st132
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st132
			}
		default:
			goto st132
		}
		goto tr0
	st132:
		if p++; p == pe {
			goto _test_eof132
		}
	st_case_132:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st133
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st133
			}
		default:
			goto st133
		}
		goto tr0
	st133:
		if p++; p == pe {
			goto _test_eof133
		}
	st_case_133:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st134
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st134
			}
		default:
			goto st134
		}
		goto tr0
	st134:
		if p++; p == pe {
			goto _test_eof134
		}
	st_case_134:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st126
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st126
			}
		default:
			goto st126
		}
		goto tr0
	tr16:
		// line 41 "typed.rl"

		predicate = p

		goto st135
	st135:
		if p++; p == pe {
			goto _test_eof135
		}
	st_case_135:
		// line 5562 "typed.go"
		switch data[p] {
		case 9:
			goto tr17
		case 32:
			goto tr17
		case 33:
			goto st4
		case 46:
			goto st94
		case 58:
			goto st94
		case 92:
			goto st95
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st4
			}
		case data[p] >= 35:
			goto st4
		}
		goto tr0
	tr4:
		// line 37 "typed.rl"

		subject = p

		goto st136
	tr204:
		// line 29 "typed.rl"

		isEscaped = true

		goto st136
	st136:
		if p++; p == pe {
			goto _test_eof136
		}
	st_case_136:
		// line 5605 "typed.go"
		switch data[p] {
		case 33:
			goto st2
		case 46:
			goto st136
		case 92:
			goto st137
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st2
			}
		case data[p] >= 35:
			goto st2
		}
		goto tr0
	tr5:
		// line 37 "typed.rl"

		subject = p

		goto st137
	tr205:
		// line 29 "typed.rl"

		isEscaped = true

		goto st137
	st137:
		if p++; p == pe {
			goto _test_eof137
		}
	st_case_137:
		// line 5642 "typed.go"
		switch data[p] {
		case 34:
			goto st138
		case 39:
			goto st138
		case 85:
			goto st139
		case 92:
			goto st138
		case 98:
			goto st138
		case 102:
			goto st138
		case 110:
			goto st138
		case 114:
			goto st138
		case 116:
			goto st138
		case 117:
			goto st143
		}
		goto tr0
	st138:
		if p++; p == pe {
			goto _test_eof138
		}
	st_case_138:
		switch data[p] {
		case 9:
			goto tr202
		case 32:
			goto tr202
		case 33:
			goto tr203
		case 46:
			goto tr204
		case 92:
			goto tr205
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto tr203
			}
		case data[p] >= 35:
			goto tr203
		}
		goto tr0
	st139:
		if p++; p == pe {
			goto _test_eof139
		}
	st_case_139:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st140
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st140
			}
		default:
			goto st140
		}
		goto tr0
	st140:
		if p++; p == pe {
			goto _test_eof140
		}
	st_case_140:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st141
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st141
			}
		default:
			goto st141
		}
		goto tr0
	st141:
		if p++; p == pe {
			goto _test_eof141
		}
	st_case_141:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st142
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st142
			}
		default:
			goto st142
		}
		goto tr0
	st142:
		if p++; p == pe {
			goto _test_eof142
		}
	st_case_142:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st143
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st143
			}
		default:
			goto st143
		}
		goto tr0
	st143:
		if p++; p == pe {
			goto _test_eof143
		}
	st_case_143:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st144
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st144
			}
		default:
			goto st144
		}
		goto tr0
	st144:
		if p++; p == pe {
			goto _test_eof144
		}
	st_case_144:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st145
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st145
			}
		default:
			goto st145
		}
		goto tr0
	st145:
		if p++; p == pe {
			goto _test_eof145
		}
	st_case_145:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st146
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st146
			}
		default:
			goto st146
		}
		goto tr0
	st146:
		if p++; p == pe {
			goto _test_eof146
		}
	st_case_146:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st138
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st138
			}
		default:
			goto st138
		}
		goto tr0
	tr3:
		// line 37 "typed.rl"

		subject = p

		goto st147
	tr240:
		// line 29 "typed.rl"

		isEscaped = true

		goto st147
	st147:
		if p++; p == pe {
			goto _test_eof147
		}
	st_case_147:
		// line 5855 "typed.go"
		switch data[p] {
		case 34:
			goto st148
		case 92:
			goto st167
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto st147
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto st147
			}
		default:
			goto st147
		}
		goto tr0
	tr241:
		// line 29 "typed.rl"

		isEscaped = true

		goto st148
	st148:
		if p++; p == pe {
			goto _test_eof148
		}
	st_case_148:
		// line 5887 "typed.go"
		switch data[p] {
		case 9:
			goto tr215
		case 32:
			goto tr215
		case 64:
			goto tr216
		case 94:
			goto tr217
		}
		goto tr0
	tr216:
		// line 53 "typed.rl"

		spec = p

		goto st149
	st149:
		if p++; p == pe {
			goto _test_eof149
		}
	st_case_149:
		// line 5911 "typed.go"
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st150
			}
		case data[p] >= 65:
			goto st150
		}
		goto tr0
	st150:
		if p++; p == pe {
			goto _test_eof150
		}
	st_case_150:
		switch data[p] {
		case 9:
			goto tr7
		case 32:
			goto tr7
		case 45:
			goto st151
		}
		switch {
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st150
			}
		case data[p] >= 65:
			goto st150
		}
		goto tr0
	st151:
		if p++; p == pe {
			goto _test_eof151
		}
	st_case_151:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st152
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st152
			}
		default:
			goto st152
		}
		goto tr0
	st152:
		if p++; p == pe {
			goto _test_eof152
		}
	st_case_152:
		switch data[p] {
		case 9:
			goto tr7
		case 32:
			goto tr7
		case 45:
			goto st151
		}
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st152
			}
		case data[p] > 90:
			if 97 <= data[p] && data[p] <= 122 {
				goto st152
			}
		default:
			goto st152
		}
		goto tr0
	tr217:
		// line 53 "typed.rl"

		spec = p

		goto st153
	st153:
		if p++; p == pe {
			goto _test_eof153
		}
	st_case_153:
		// line 5999 "typed.go"
		if data[p] == 94 {
			goto st154
		}
		goto tr0
	st154:
		if p++; p == pe {
			goto _test_eof154
		}
	st_case_154:
		if data[p] == 60 {
			goto st155
		}
		goto tr0
	tr234:
		// line 29 "typed.rl"

		isEscaped = true

		goto st155
	st155:
		if p++; p == pe {
			goto _test_eof155
		}
	st_case_155:
		// line 6025 "typed.go"
		switch data[p] {
		case 33:
			goto st155
		case 62:
			goto st156
		case 92:
			goto st157
		case 95:
			goto st155
		case 126:
			goto st155
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto st155
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto st155
				}
			case data[p] >= 97:
				goto st155
			}
		default:
			goto st155
		}
		goto tr0
	tr235:
		// line 29 "typed.rl"

		isEscaped = true

		goto st156
	st156:
		if p++; p == pe {
			goto _test_eof156
		}
	st_case_156:
		// line 6068 "typed.go"
		switch data[p] {
		case 9:
			goto tr7
		case 32:
			goto tr7
		}
		goto tr0
	tr236:
		// line 29 "typed.rl"

		isEscaped = true

		goto st157
	st157:
		if p++; p == pe {
			goto _test_eof157
		}
	st_case_157:
		// line 6088 "typed.go"
		switch data[p] {
		case 85:
			goto st158
		case 117:
			goto st162
		}
		goto tr0
	st158:
		if p++; p == pe {
			goto _test_eof158
		}
	st_case_158:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st159
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st159
			}
		default:
			goto st159
		}
		goto tr0
	st159:
		if p++; p == pe {
			goto _test_eof159
		}
	st_case_159:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st160
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st160
			}
		default:
			goto st160
		}
		goto tr0
	st160:
		if p++; p == pe {
			goto _test_eof160
		}
	st_case_160:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st161
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st161
			}
		default:
			goto st161
		}
		goto tr0
	st161:
		if p++; p == pe {
			goto _test_eof161
		}
	st_case_161:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st162
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st162
			}
		default:
			goto st162
		}
		goto tr0
	st162:
		if p++; p == pe {
			goto _test_eof162
		}
	st_case_162:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st163
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st163
			}
		default:
			goto st163
		}
		goto tr0
	st163:
		if p++; p == pe {
			goto _test_eof163
		}
	st_case_163:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st164
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st164
			}
		default:
			goto st164
		}
		goto tr0
	st164:
		if p++; p == pe {
			goto _test_eof164
		}
	st_case_164:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st165
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st165
			}
		default:
			goto st165
		}
		goto tr0
	st165:
		if p++; p == pe {
			goto _test_eof165
		}
	st_case_165:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st166
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st166
			}
		default:
			goto st166
		}
		goto tr0
	st166:
		if p++; p == pe {
			goto _test_eof166
		}
	st_case_166:
		switch data[p] {
		case 33:
			goto tr234
		case 62:
			goto tr235
		case 92:
			goto tr236
		case 95:
			goto tr234
		case 126:
			goto tr234
		}
		switch {
		case data[p] < 61:
			if 35 <= data[p] && data[p] <= 59 {
				goto tr234
			}
		case data[p] > 93:
			switch {
			case data[p] > 122:
				if 128 <= data[p] && data[p] <= 1114111 {
					goto tr234
				}
			case data[p] >= 97:
				goto tr234
			}
		default:
			goto tr234
		}
		goto tr0
	tr242:
		// line 29 "typed.rl"

		isEscaped = true

		goto st167
	st167:
		if p++; p == pe {
			goto _test_eof167
		}
	st_case_167:
		// line 6287 "typed.go"
		switch data[p] {
		case 34:
			goto st168
		case 39:
			goto st168
		case 85:
			goto st169
		case 92:
			goto st168
		case 98:
			goto st168
		case 102:
			goto st168
		case 110:
			goto st168
		case 114:
			goto st168
		case 116:
			goto st168
		case 117:
			goto st173
		}
		goto tr0
	st168:
		if p++; p == pe {
			goto _test_eof168
		}
	st_case_168:
		switch data[p] {
		case 34:
			goto tr241
		case 92:
			goto tr242
		}
		switch {
		case data[p] < 11:
			if 0 <= data[p] && data[p] <= 9 {
				goto tr240
			}
		case data[p] > 12:
			if 14 <= data[p] && data[p] <= 1114111 {
				goto tr240
			}
		default:
			goto tr240
		}
		goto tr0
	st169:
		if p++; p == pe {
			goto _test_eof169
		}
	st_case_169:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st170
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st170
			}
		default:
			goto st170
		}
		goto tr0
	st170:
		if p++; p == pe {
			goto _test_eof170
		}
	st_case_170:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st171
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st171
			}
		default:
			goto st171
		}
		goto tr0
	st171:
		if p++; p == pe {
			goto _test_eof171
		}
	st_case_171:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st172
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st172
			}
		default:
			goto st172
		}
		goto tr0
	st172:
		if p++; p == pe {
			goto _test_eof172
		}
	st_case_172:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st173
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st173
			}
		default:
			goto st173
		}
		goto tr0
	st173:
		if p++; p == pe {
			goto _test_eof173
		}
	st_case_173:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st174
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st174
			}
		default:
			goto st174
		}
		goto tr0
	st174:
		if p++; p == pe {
			goto _test_eof174
		}
	st_case_174:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st175
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st175
			}
		default:
			goto st175
		}
		goto tr0
	st175:
		if p++; p == pe {
			goto _test_eof175
		}
	st_case_175:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st176
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st176
			}
		default:
			goto st176
		}
		goto tr0
	st176:
		if p++; p == pe {
			goto _test_eof176
		}
	st_case_176:
		switch {
		case data[p] < 65:
			if 48 <= data[p] && data[p] <= 57 {
				goto st168
			}
		case data[p] > 70:
			if 97 <= data[p] && data[p] <= 102 {
				goto st168
			}
		default:
			goto st168
		}
		goto tr0
	tr6:
		// line 37 "typed.rl"

		subject = p

		goto st177
	st177:
		if p++; p == pe {
			goto _test_eof177
		}
	st_case_177:
		// line 6491 "typed.go"
		switch data[p] {
		case 9:
			goto tr7
		case 32:
			goto tr7
		case 33:
			goto st2
		case 46:
			goto st136
		case 58:
			goto st136
		case 92:
			goto st137
		}
		switch {
		case data[p] > 126:
			if 128 <= data[p] && data[p] <= 1114111 {
				goto st2
			}
		case data[p] >= 35:
			goto st2
		}
		goto tr0
	st_out:
	_test_eof1:
		cs = 1
		goto _test_eof
	_test_eof2:
		cs = 2
		goto _test_eof
	_test_eof3:
		cs = 3
		goto _test_eof
	_test_eof4:
		cs = 4
		goto _test_eof
	_test_eof5:
		cs = 5
		goto _test_eof
	_test_eof6:
		cs = 6
		goto _test_eof
	_test_eof7:
		cs = 7
		goto _test_eof
	_test_eof8:
		cs = 8
		goto _test_eof
	_test_eof9:
		cs = 9
		goto _test_eof
	_test_eof178:
		cs = 178
		goto _test_eof
	_test_eof179:
		cs = 179
		goto _test_eof
	_test_eof180:
		cs = 180
		goto _test_eof
	_test_eof181:
		cs = 181
		goto _test_eof
	_test_eof182:
		cs = 182
		goto _test_eof
	_test_eof183:
		cs = 183
		goto _test_eof
	_test_eof184:
		cs = 184
		goto _test_eof
	_test_eof185:
		cs = 185
		goto _test_eof
	_test_eof186:
		cs = 186
		goto _test_eof
	_test_eof187:
		cs = 187
		goto _test_eof
	_test_eof188:
		cs = 188
		goto _test_eof
	_test_eof189:
		cs = 189
		goto _test_eof
	_test_eof190:
		cs = 190
		goto _test_eof
	_test_eof191:
		cs = 191
		goto _test_eof
	_test_eof192:
		cs = 192
		goto _test_eof
	_test_eof193:
		cs = 193
		goto _test_eof
	_test_eof194:
		cs = 194
		goto _test_eof
	_test_eof195:
		cs = 195
		goto _test_eof
	_test_eof10:
		cs = 10
		goto _test_eof
	_test_eof11:
		cs = 11
		goto _test_eof
	_test_eof12:
		cs = 12
		goto _test_eof
	_test_eof13:
		cs = 13
		goto _test_eof
	_test_eof14:
		cs = 14
		goto _test_eof
	_test_eof15:
		cs = 15
		goto _test_eof
	_test_eof16:
		cs = 16
		goto _test_eof
	_test_eof17:
		cs = 17
		goto _test_eof
	_test_eof18:
		cs = 18
		goto _test_eof
	_test_eof19:
		cs = 19
		goto _test_eof
	_test_eof20:
		cs = 20
		goto _test_eof
	_test_eof21:
		cs = 21
		goto _test_eof
	_test_eof22:
		cs = 22
		goto _test_eof
	_test_eof23:
		cs = 23
		goto _test_eof
	_test_eof24:
		cs = 24
		goto _test_eof
	_test_eof25:
		cs = 25
		goto _test_eof
	_test_eof26:
		cs = 26
		goto _test_eof
	_test_eof27:
		cs = 27
		goto _test_eof
	_test_eof28:
		cs = 28
		goto _test_eof
	_test_eof29:
		cs = 29
		goto _test_eof
	_test_eof30:
		cs = 30
		goto _test_eof
	_test_eof31:
		cs = 31
		goto _test_eof
	_test_eof32:
		cs = 32
		goto _test_eof
	_test_eof33:
		cs = 33
		goto _test_eof
	_test_eof34:
		cs = 34
		goto _test_eof
	_test_eof35:
		cs = 35
		goto _test_eof
	_test_eof36:
		cs = 36
		goto _test_eof
	_test_eof37:
		cs = 37
		goto _test_eof
	_test_eof38:
		cs = 38
		goto _test_eof
	_test_eof39:
		cs = 39
		goto _test_eof
	_test_eof40:
		cs = 40
		goto _test_eof
	_test_eof41:
		cs = 41
		goto _test_eof
	_test_eof42:
		cs = 42
		goto _test_eof
	_test_eof43:
		cs = 43
		goto _test_eof
	_test_eof44:
		cs = 44
		goto _test_eof
	_test_eof45:
		cs = 45
		goto _test_eof
	_test_eof46:
		cs = 46
		goto _test_eof
	_test_eof47:
		cs = 47
		goto _test_eof
	_test_eof48:
		cs = 48
		goto _test_eof
	_test_eof49:
		cs = 49
		goto _test_eof
	_test_eof50:
		cs = 50
		goto _test_eof
	_test_eof51:
		cs = 51
		goto _test_eof
	_test_eof196:
		cs = 196
		goto _test_eof
	_test_eof197:
		cs = 197
		goto _test_eof
	_test_eof198:
		cs = 198
		goto _test_eof
	_test_eof199:
		cs = 199
		goto _test_eof
	_test_eof200:
		cs = 200
		goto _test_eof
	_test_eof201:
		cs = 201
		goto _test_eof
	_test_eof202:
		cs = 202
		goto _test_eof
	_test_eof203:
		cs = 203
		goto _test_eof
	_test_eof204:
		cs = 204
		goto _test_eof
	_test_eof205:
		cs = 205
		goto _test_eof
	_test_eof206:
		cs = 206
		goto _test_eof
	_test_eof207:
		cs = 207
		goto _test_eof
	_test_eof208:
		cs = 208
		goto _test_eof
	_test_eof209:
		cs = 209
		goto _test_eof
	_test_eof210:
		cs = 210
		goto _test_eof
	_test_eof211:
		cs = 211
		goto _test_eof
	_test_eof212:
		cs = 212
		goto _test_eof
	_test_eof213:
		cs = 213
		goto _test_eof
	_test_eof214:
		cs = 214
		goto _test_eof
	_test_eof215:
		cs = 215
		goto _test_eof
	_test_eof216:
		cs = 216
		goto _test_eof
	_test_eof217:
		cs = 217
		goto _test_eof
	_test_eof218:
		cs = 218
		goto _test_eof
	_test_eof219:
		cs = 219
		goto _test_eof
	_test_eof220:
		cs = 220
		goto _test_eof
	_test_eof221:
		cs = 221
		goto _test_eof
	_test_eof222:
		cs = 222
		goto _test_eof
	_test_eof223:
		cs = 223
		goto _test_eof
	_test_eof224:
		cs = 224
		goto _test_eof
	_test_eof225:
		cs = 225
		goto _test_eof
	_test_eof226:
		cs = 226
		goto _test_eof
	_test_eof227:
		cs = 227
		goto _test_eof
	_test_eof228:
		cs = 228
		goto _test_eof
	_test_eof229:
		cs = 229
		goto _test_eof
	_test_eof230:
		cs = 230
		goto _test_eof
	_test_eof231:
		cs = 231
		goto _test_eof
	_test_eof232:
		cs = 232
		goto _test_eof
	_test_eof233:
		cs = 233
		goto _test_eof
	_test_eof234:
		cs = 234
		goto _test_eof
	_test_eof235:
		cs = 235
		goto _test_eof
	_test_eof236:
		cs = 236
		goto _test_eof
	_test_eof237:
		cs = 237
		goto _test_eof
	_test_eof238:
		cs = 238
		goto _test_eof
	_test_eof239:
		cs = 239
		goto _test_eof
	_test_eof240:
		cs = 240
		goto _test_eof
	_test_eof241:
		cs = 241
		goto _test_eof
	_test_eof52:
		cs = 52
		goto _test_eof
	_test_eof53:
		cs = 53
		goto _test_eof
	_test_eof54:
		cs = 54
		goto _test_eof
	_test_eof55:
		cs = 55
		goto _test_eof
	_test_eof56:
		cs = 56
		goto _test_eof
	_test_eof57:
		cs = 57
		goto _test_eof
	_test_eof58:
		cs = 58
		goto _test_eof
	_test_eof59:
		cs = 59
		goto _test_eof
	_test_eof60:
		cs = 60
		goto _test_eof
	_test_eof61:
		cs = 61
		goto _test_eof
	_test_eof62:
		cs = 62
		goto _test_eof
	_test_eof63:
		cs = 63
		goto _test_eof
	_test_eof64:
		cs = 64
		goto _test_eof
	_test_eof65:
		cs = 65
		goto _test_eof
	_test_eof66:
		cs = 66
		goto _test_eof
	_test_eof67:
		cs = 67
		goto _test_eof
	_test_eof68:
		cs = 68
		goto _test_eof
	_test_eof69:
		cs = 69
		goto _test_eof
	_test_eof70:
		cs = 70
		goto _test_eof
	_test_eof71:
		cs = 71
		goto _test_eof
	_test_eof72:
		cs = 72
		goto _test_eof
	_test_eof73:
		cs = 73
		goto _test_eof
	_test_eof74:
		cs = 74
		goto _test_eof
	_test_eof75:
		cs = 75
		goto _test_eof
	_test_eof76:
		cs = 76
		goto _test_eof
	_test_eof77:
		cs = 77
		goto _test_eof
	_test_eof78:
		cs = 78
		goto _test_eof
	_test_eof79:
		cs = 79
		goto _test_eof
	_test_eof80:
		cs = 80
		goto _test_eof
	_test_eof81:
		cs = 81
		goto _test_eof
	_test_eof82:
		cs = 82
		goto _test_eof
	_test_eof83:
		cs = 83
		goto _test_eof
	_test_eof84:
		cs = 84
		goto _test_eof
	_test_eof85:
		cs = 85
		goto _test_eof
	_test_eof86:
		cs = 86
		goto _test_eof
	_test_eof87:
		cs = 87
		goto _test_eof
	_test_eof88:
		cs = 88
		goto _test_eof
	_test_eof89:
		cs = 89
		goto _test_eof
	_test_eof90:
		cs = 90
		goto _test_eof
	_test_eof91:
		cs = 91
		goto _test_eof
	_test_eof92:
		cs = 92
		goto _test_eof
	_test_eof93:
		cs = 93
		goto _test_eof
	_test_eof94:
		cs = 94
		goto _test_eof
	_test_eof95:
		cs = 95
		goto _test_eof
	_test_eof96:
		cs = 96
		goto _test_eof
	_test_eof97:
		cs = 97
		goto _test_eof
	_test_eof98:
		cs = 98
		goto _test_eof
	_test_eof99:
		cs = 99
		goto _test_eof
	_test_eof100:
		cs = 100
		goto _test_eof
	_test_eof101:
		cs = 101
		goto _test_eof
	_test_eof102:
		cs = 102
		goto _test_eof
	_test_eof103:
		cs = 103
		goto _test_eof
	_test_eof104:
		cs = 104
		goto _test_eof
	_test_eof105:
		cs = 105
		goto _test_eof
	_test_eof106:
		cs = 106
		goto _test_eof
	_test_eof107:
		cs = 107
		goto _test_eof
	_test_eof108:
		cs = 108
		goto _test_eof
	_test_eof109:
		cs = 109
		goto _test_eof
	_test_eof110:
		cs = 110
		goto _test_eof
	_test_eof111:
		cs = 111
		goto _test_eof
	_test_eof112:
		cs = 112
		goto _test_eof
	_test_eof113:
		cs = 113
		goto _test_eof
	_test_eof114:
		cs = 114
		goto _test_eof
	_test_eof115:
		cs = 115
		goto _test_eof
	_test_eof116:
		cs = 116
		goto _test_eof
	_test_eof117:
		cs = 117
		goto _test_eof
	_test_eof118:
		cs = 118
		goto _test_eof
	_test_eof119:
		cs = 119
		goto _test_eof
	_test_eof120:
		cs = 120
		goto _test_eof
	_test_eof121:
		cs = 121
		goto _test_eof
	_test_eof122:
		cs = 122
		goto _test_eof
	_test_eof123:
		cs = 123
		goto _test_eof
	_test_eof124:
		cs = 124
		goto _test_eof
	_test_eof125:
		cs = 125
		goto _test_eof
	_test_eof126:
		cs = 126
		goto _test_eof
	_test_eof127:
		cs = 127
		goto _test_eof
	_test_eof128:
		cs = 128
		goto _test_eof
	_test_eof129:
		cs = 129
		goto _test_eof
	_test_eof130:
		cs = 130
		goto _test_eof
	_test_eof131:
		cs = 131
		goto _test_eof
	_test_eof132:
		cs = 132
		goto _test_eof
	_test_eof133:
		cs = 133
		goto _test_eof
	_test_eof134:
		cs = 134
		goto _test_eof
	_test_eof135:
		cs = 135
		goto _test_eof
	_test_eof136:
		cs = 136
		goto _test_eof
	_test_eof137:
		cs = 137
		goto _test_eof
	_test_eof138:
		cs = 138
		goto _test_eof
	_test_eof139:
		cs = 139
		goto _test_eof
	_test_eof140:
		cs = 140
		goto _test_eof
	_test_eof141:
		cs = 141
		goto _test_eof
	_test_eof142:
		cs = 142
		goto _test_eof
	_test_eof143:
		cs = 143
		goto _test_eof
	_test_eof144:
		cs = 144
		goto _test_eof
	_test_eof145:
		cs = 145
		goto _test_eof
	_test_eof146:
		cs = 146
		goto _test_eof
	_test_eof147:
		cs = 147
		goto _test_eof
	_test_eof148:
		cs = 148
		goto _test_eof
	_test_eof149:
		cs = 149
		goto _test_eof
	_test_eof150:
		cs = 150
		goto _test_eof
	_test_eof151:
		cs = 151
		goto _test_eof
	_test_eof152:
		cs = 152
		goto _test_eof
	_test_eof153:
		cs = 153
		goto _test_eof
	_test_eof154:
		cs = 154
		goto _test_eof
	_test_eof155:
		cs = 155
		goto _test_eof
	_test_eof156:
		cs = 156
		goto _test_eof
	_test_eof157:
		cs = 157
		goto _test_eof
	_test_eof158:
		cs = 158
		goto _test_eof
	_test_eof159:
		cs = 159
		goto _test_eof
	_test_eof160:
		cs = 160
		goto _test_eof
	_test_eof161:
		cs = 161
		goto _test_eof
	_test_eof162:
		cs = 162
		goto _test_eof
	_test_eof163:
		cs = 163
		goto _test_eof
	_test_eof164:
		cs = 164
		goto _test_eof
	_test_eof165:
		cs = 165
		goto _test_eof
	_test_eof166:
		cs = 166
		goto _test_eof
	_test_eof167:
		cs = 167
		goto _test_eof
	_test_eof168:
		cs = 168
		goto _test_eof
	_test_eof169:
		cs = 169
		goto _test_eof
	_test_eof170:
		cs = 170
		goto _test_eof
	_test_eof171:
		cs = 171
		goto _test_eof
	_test_eof172:
		cs = 172
		goto _test_eof
	_test_eof173:
		cs = 173
		goto _test_eof
	_test_eof174:
		cs = 174
		goto _test_eof
	_test_eof175:
		cs = 175
		goto _test_eof
	_test_eof176:
		cs = 176
		goto _test_eof
	_test_eof177:
		cs = 177
		goto _test_eof

	_test_eof:
		{
		}
		if p == eof {
			switch cs {
			case 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241:
				// line 93 "typed.rl"

				return q, nil

			case 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177:
				// line 100 "typed.rl"

				if p < len(data) {
					if r := data[p]; r < unicode.MaxASCII {
						return q, fmt.Errorf("%v: unexpected rune %q at %d", quad.ErrInvalid, data[p], p)
					} else {
						return q, fmt.Errorf("%v: unexpected rune %q (\\u%04x) at %d", quad.ErrInvalid, data[p], data[p], p)
					}
				}
				return q, quad.ErrIncomplete

			case 178, 180, 183, 184, 196, 230:
				// line 97 "typed.rl"

				// line 93 "typed.rl"

				return q, nil

				// line 6790 "typed.go"
			}
		}

	_out:
		{
		}
	}

	// line 158 "typed.rl"

	return quad.Quad{}, quad.ErrInvalid
}
